{"ast":null,"code":"var domhandler = require('domhandler');\nvar htmlToDOM = require('html-dom-parser').default;\nvar attributesToProps = require('./lib/attributes-to-props');\nvar domToReact = require('./lib/dom-to-react');\n\n// support backwards compatibility for ES Module\nhtmlToDOM = /* istanbul ignore next */\ntypeof htmlToDOM.default === 'function' ? htmlToDOM.default : htmlToDOM;\nvar domParserOptions = {\n  lowerCaseAttributeNames: false\n};\n\n/**\n * Converts HTML string to React elements.\n *\n * @param {string} html - HTML string.\n * @param {object} [options] - Parser options.\n * @param {object} [options.htmlparser2] - htmlparser2 options.\n * @param {object} [options.library] - Library for React, Preact, etc.\n * @param {Function} [options.replace] - Replace method.\n * @returns {JSX.Element|JSX.Element[]|string} - React element(s), empty array, or string.\n */\nfunction HTMLReactParser(html, options) {\n  if (typeof html !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n  if (html === '') {\n    return [];\n  }\n  options = options || {};\n  return domToReact(htmlToDOM(html, options.htmlparser2 || domParserOptions), options);\n}\nHTMLReactParser.domToReact = domToReact;\nHTMLReactParser.htmlToDOM = htmlToDOM;\nHTMLReactParser.attributesToProps = attributesToProps;\n\n// domhandler\nHTMLReactParser.Comment = domhandler.Comment;\nHTMLReactParser.Element = domhandler.Element;\nHTMLReactParser.ProcessingInstruction = domhandler.ProcessingInstruction;\nHTMLReactParser.Text = domhandler.Text;\n\n// support CommonJS and ES Modules\nmodule.exports = HTMLReactParser;\nHTMLReactParser.default = HTMLReactParser;","map":{"version":3,"names":["domhandler","require","htmlToDOM","default","attributesToProps","domToReact","domParserOptions","lowerCaseAttributeNames","HTMLReactParser","html","options","TypeError","htmlparser2","Comment","Element","ProcessingInstruction","Text","module","exports"],"sources":["D:/WFA/portfolio/sumersingh/P1/node_modules/html-react-parser/index.js"],"sourcesContent":["var domhandler = require('domhandler');\nvar htmlToDOM = require('html-dom-parser').default;\n\nvar attributesToProps = require('./lib/attributes-to-props');\nvar domToReact = require('./lib/dom-to-react');\n\n// support backwards compatibility for ES Module\nhtmlToDOM =\n  /* istanbul ignore next */\n  typeof htmlToDOM.default === 'function' ? htmlToDOM.default : htmlToDOM;\n\nvar domParserOptions = { lowerCaseAttributeNames: false };\n\n/**\n * Converts HTML string to React elements.\n *\n * @param {string} html - HTML string.\n * @param {object} [options] - Parser options.\n * @param {object} [options.htmlparser2] - htmlparser2 options.\n * @param {object} [options.library] - Library for React, Preact, etc.\n * @param {Function} [options.replace] - Replace method.\n * @returns {JSX.Element|JSX.Element[]|string} - React element(s), empty array, or string.\n */\nfunction HTMLReactParser(html, options) {\n  if (typeof html !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n  if (html === '') {\n    return [];\n  }\n  options = options || {};\n  return domToReact(\n    htmlToDOM(html, options.htmlparser2 || domParserOptions),\n    options\n  );\n}\n\nHTMLReactParser.domToReact = domToReact;\nHTMLReactParser.htmlToDOM = htmlToDOM;\nHTMLReactParser.attributesToProps = attributesToProps;\n\n// domhandler\nHTMLReactParser.Comment = domhandler.Comment;\nHTMLReactParser.Element = domhandler.Element;\nHTMLReactParser.ProcessingInstruction = domhandler.ProcessingInstruction;\nHTMLReactParser.Text = domhandler.Text;\n\n// support CommonJS and ES Modules\nmodule.exports = HTMLReactParser;\nHTMLReactParser.default = HTMLReactParser;\n"],"mappings":"AAAA,IAAIA,UAAU,GAAGC,OAAO,CAAC,YAAY,CAAC;AACtC,IAAIC,SAAS,GAAGD,OAAO,CAAC,iBAAiB,CAAC,CAACE,OAAO;AAElD,IAAIC,iBAAiB,GAAGH,OAAO,CAAC,2BAA2B,CAAC;AAC5D,IAAII,UAAU,GAAGJ,OAAO,CAAC,oBAAoB,CAAC;;AAE9C;AACAC,SAAS,GACP;AACA,OAAOA,SAAS,CAACC,OAAO,KAAK,UAAU,GAAGD,SAAS,CAACC,OAAO,GAAGD,SAAS;AAEzE,IAAII,gBAAgB,GAAG;EAAEC,uBAAuB,EAAE;AAAM,CAAC;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,eAAeA,CAACC,IAAI,EAAEC,OAAO,EAAE;EACtC,IAAI,OAAOD,IAAI,KAAK,QAAQ,EAAE;IAC5B,MAAM,IAAIE,SAAS,CAAC,iCAAiC,CAAC;EACxD;EACA,IAAIF,IAAI,KAAK,EAAE,EAAE;IACf,OAAO,EAAE;EACX;EACAC,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;EACvB,OAAOL,UAAU,CACfH,SAAS,CAACO,IAAI,EAAEC,OAAO,CAACE,WAAW,IAAIN,gBAAgB,CAAC,EACxDI,OACF,CAAC;AACH;AAEAF,eAAe,CAACH,UAAU,GAAGA,UAAU;AACvCG,eAAe,CAACN,SAAS,GAAGA,SAAS;AACrCM,eAAe,CAACJ,iBAAiB,GAAGA,iBAAiB;;AAErD;AACAI,eAAe,CAACK,OAAO,GAAGb,UAAU,CAACa,OAAO;AAC5CL,eAAe,CAACM,OAAO,GAAGd,UAAU,CAACc,OAAO;AAC5CN,eAAe,CAACO,qBAAqB,GAAGf,UAAU,CAACe,qBAAqB;AACxEP,eAAe,CAACQ,IAAI,GAAGhB,UAAU,CAACgB,IAAI;;AAEtC;AACAC,MAAM,CAACC,OAAO,GAAGV,eAAe;AAChCA,eAAe,CAACL,OAAO,GAAGK,eAAe","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}